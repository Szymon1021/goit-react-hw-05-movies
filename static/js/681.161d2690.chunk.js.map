{"version":3,"file":"static/js/681.161d2690.chunk.js","mappings":"yNAyCA,UArCA,WACE,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,EAAUC,OAAOH,GACvB,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,WAAMN,GAAN,gGAEGO,EAAAA,EAAAA,sBAA0BP,GAF7B,OAElBQ,EAFkB,OAGxBJ,EAAWI,GAHa,uGAAH,sDAOzBF,EAAoBN,EACrB,GAAE,CAACA,KAGF,0BAEI,wBACGG,EAAQM,SAAsC,IAA3BN,EAAQM,QAAQC,OAClCP,EAAQM,QAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASf,EAAS,EAATA,GACtC,OACE,2BACE,oCAAYc,MACZ,uBAAIC,MAFGf,EAKZ,KAED,yEAMX,C","sources":["components/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { api } from 'Api/api';\n\nfunction Reviews() {\n  const { id } = useParams();\n  const movieId = Number(id);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getMovieReviewsById = async movieId => {\n      try {\n        const movieReviews = await api.fetchGetMoviesReviews(movieId);\n        setReviews(movieReviews);\n      } catch (error) {}\n    };\n\n    getMovieReviewsById(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      {\n        <ul>\n          {reviews.results && reviews.results.length !== 0 ? (\n            reviews.results.map(({ author, content, id }) => {\n              return (\n                <li key={id}>\n                  <h3>Athor: {author}</h3>\n                  <p>{content}</p>\n                </li>\n              );\n            })\n          ) : (\n            <p>We do not have any reviews for this movie.</p>\n          )}\n        </ul>\n      }\n    </div>\n  );\n}\nexport default Reviews;\n"],"names":["id","useParams","movieId","Number","useState","reviews","setReviews","useEffect","getMovieReviewsById","api","movieReviews","results","length","map","author","content"],"sourceRoot":""}