{"version":3,"file":"static/js/429.da841f23.chunk.js","mappings":"sPAkBA,MAlBA,SAAsBA,GACpB,OACE,kBAAMC,SAAUD,EAAME,iBAAtB,WACE,mBAAQC,KAAK,SAAb,UACE,gDAGF,kBACEC,SAAUJ,EAAMK,YAChBF,KAAK,OACLG,aAAa,MACbC,WAAS,EACTC,YAAY,oBAInB,E,QC4BD,MA1CA,YAAiC,IAAXC,EAAU,EAAVA,OAEpB,OACE,eACEC,MAAO,CACLC,QAAS,OACTC,oBAAqB,iBACrBC,iBAAkB,iBAClBC,cAAe,OACfC,WAAY,QANhB,SASGN,EAAOO,KAAI,SAAAC,GACV,OACE,eACEP,MAAO,CACLQ,UAAW,OACXC,MAAO,QACPC,OAAQ,QACRC,OAAQ,OACRC,QAAS,OACTX,QAAS,OACTY,cAAe,SACfC,eAAgB,eAChBC,WAAY,SACZC,UAAW,SACXC,OAAQ,iBACRC,SAAU,QAbd,UAiBE,UAAC,KAAD,CAAMC,GAAE,kBAAaZ,EAAEa,IAAvB,WACE,gBAAKC,IA/BR,oDA+BmBd,EAAEe,YAAaC,IAAKhB,EAAEiB,SACtC,uBAAIjB,EAAEiB,MAAQjB,EAAEiB,MAAQjB,EAAEkB,WAJvBlB,EAAEa,GAQZ,KAGN,ECTD,MA5BA,WACE,OAA0BM,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAOMtC,EAAgB,mCAAG,WAAMuC,GAAN,8EACvBA,EAAEC,iBADqB,SAGAC,EAAAA,EAAAA,kBAAsBJ,GAHtB,OAGjBK,EAHiB,OAIvBN,EAASM,EAASC,SAClBC,QAAQC,IAAIH,EAASC,SALE,2CAAH,sDAQtB,OACE,4BACE,SAAC,EAAD,CACE3C,iBAAkBA,EAClBG,YAjBc,SAAA2C,GAClBA,EAAIN,iBACJF,EAAUQ,EAAIC,OAAOC,MACtB,KAgBG,SAAC,EAAD,CAAYzC,OAAQ4B,MAGzB,C","sources":["pages/Movies/MoviesFinder.jsx","pages/Movies/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["function MoviesFinder(props) {\n  return (\n    <form onSubmit={props.handleGetRequest}>\n      <button type=\"submit\">\n        <span>Search movies </span>\n      </button>\n\n      <input\n        onChange={props.handleInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n    </form>\n  );\n}\n\nexport default MoviesFinder;\n","import { Link } from 'react-router-dom';\n\nfunction MoviesList({ querys }) {\n  const src = `https://www.themoviedb.org/t/p/w220_and_h330_face`;\n  return (\n    <ul\n      style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(4, 1fr)',\n        gridTemplateRows: 'repeat(5, 1fr)',\n        gridColumnGap: '20px',\n        gridRowGap: '20px',\n      }}\n    >\n      {querys.map(q => {\n        return (\n          <li\n            style={{\n              listStyle: 'none',\n              width: '220px',\n              height: '400px',\n              margin: '10px',\n              padding: '10px',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-around',\n              alignItems: 'center',\n              textAlign: 'center',\n              border: '1px solid #ccc',\n              fontSize: '20px',\n            }}\n            key={q.id}\n          >\n            <Link to={`/Movies/${q.id}`}>\n              <img src={src + q.poster_path} alt={q.title} />\n              <p>{q.title ? q.title : q.name}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default MoviesList;\n","import { useState } from 'react';\nimport { api } from 'Api/api';\nimport MoviesFinder from './MoviesFinder';\nimport MoviesList from './MoviesList';\n\nfunction Movies() {\n  const [query, setQuery] = useState([]);\n  const [search, setSearch] = useState('');\n\n  const handleInput = evt => {\n    evt.preventDefault();\n    setSearch(evt.target.value);\n  };\n\n  const handleGetRequest = async e => {\n    e.preventDefault();\n\n    const response = await api.fetchSearchMovies(search);\n    setQuery(response.results);\n    console.log(response.results);\n  };\n\n  return (\n    <div>\n      <MoviesFinder\n        handleGetRequest={handleGetRequest}\n        handleInput={handleInput}\n      ></MoviesFinder>\n      <MoviesList querys={query}></MoviesList>\n    </div>\n  );\n}\n\nexport default Movies;\n"],"names":["props","onSubmit","handleGetRequest","type","onChange","handleInput","autoComplete","autoFocus","placeholder","querys","style","display","gridTemplateColumns","gridTemplateRows","gridColumnGap","gridRowGap","map","q","listStyle","width","height","margin","padding","flexDirection","justifyContent","alignItems","textAlign","border","fontSize","to","id","src","poster_path","alt","title","name","useState","query","setQuery","search","setSearch","e","preventDefault","api","response","results","console","log","evt","target","value"],"sourceRoot":""}